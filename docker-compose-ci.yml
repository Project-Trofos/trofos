version: '3.8'
services:
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.production
      target: test
    image: trofos_frontend
    ports:
      - '3000:3000'
    container_name: trofos-frontend-ci
    environment:
      - CI=true
    restart: always
    links:
      - backend
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.production
      target: test
      args:
        DATABASE_URL: ${DATABASE_URL}
        AI_DATABASE_URL: ${AI_DATABASE_URL}
        CI: ${CI}
      network: host
    image: trofos_backend
    ports:
      - '3001:3001'
    container_name: trofos-backend-ci
    restart: always
    links:
      - postgres
  hocus_pocus_server:
    build:
      context: ./packages/hocus_pocus_server
      dockerfile: Dockerfile.production
      target: test
      args:
        DATABASE_URL: ${DATABASE_URL}
        AI_DATABASE_URL: ${AI_DATABASE_URL}
        CI: ${CI}
      network: host
    image: trofos_hocus_pocus_server
    ports:
      - '3002:3002'
    container_name: trofos-hocus-pocus-server-ci
    restart: always
    links:
      - backend
  postgres:
    image: pgvector/pgvector:pg14
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - /var/lib/postgresql/data
