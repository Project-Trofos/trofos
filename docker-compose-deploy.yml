version: '1'

networks:
  application:
    driver: bridge
    name: trofos-application

services:
  frontend:
    image: ghcr.io/project-trofos/trofos/frontend:main
    ports:
      - '3000:80'
    container_name: trofos-frontend-production
    restart: always
    links:
      - backend
    networks:
      - application
  backend:
    image: ghcr.io/project-trofos/trofos/backend:main
    ports:
      - '3001:3001'
    container_name: trofos-backend-production
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    networks:
      - application
  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - application
volumes:
  postgres:
