version: '1'

networks:
  application:
    driver: bridge
    name: trofos-application

services:
  frontend:
    image: ghcr.io/project-trofos/trofos/frontend:main
    ports:
      - '3000:80'
    container_name: trofos-frontend-production
    restart: always
    links:
      - backend
    networks:
      - application
  api_gateway:
    image: ghcr.io/project-trofos/trofos/api_gateway:main
    ports:
      - '3001:80'
    container_name: trofos-api-gateway-production
    restart: always
    networks:
      - application
  backend:
    image: ghcr.io/project-trofos/trofos/backend:main
    ports:
      - '3003:3003'
    container_name: trofos-backend-production
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - FRONTEND_BASE_URL=${FRONTEND_BASE_URL}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - EMAIL_KEY=${EMAIL_KEY}
      - NODE_ENV=${NODE_ENV}
      - AWS_SES_FROM_EMAIL=${AWS_SES_FROM_EMAIL}
      - SP_PRIVATE_KEY_BASE64=${SP_PRIVATE_KEY_BASE64}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AI_DATABASE_URL=${AI_DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres
    networks:
      - application
  hocus_pocus_server:
    image: ghcr.io/project-trofos/trofos/hocus_pocus_server:main
    ports:
      - '3002:3002'
    container_name: trofos-hocus-pocus-server-production
    restart: always
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BACKEND_URL=${BACKEND_URL}
    networks:
      - application
  postgres:
    image: pgvector/pgvector:pg14
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - application
volumes:
  postgres:
